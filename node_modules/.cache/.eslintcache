[{"/home/bernardo/react/calculadora/src/index.js":"1","/home/bernardo/react/calculadora/src/App.js":"2","/home/bernardo/react/calculadora/src/reportWebVitals.js":"3","/home/bernardo/react/calculadora/src/componentes/Calculadora/Calculadora.js":"4"},{"size":535,"mtime":1687222157524,"results":"5","hashOfConfig":"6"},{"size":294,"mtime":1687222157524,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1687222157524,"results":"8","hashOfConfig":"6"},{"size":4220,"mtime":1687222157524,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10k2d38",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/home/bernardo/react/calculadora/src/index.js",[],[],"/home/bernardo/react/calculadora/src/App.js",["24"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport Calculadora from './componentes/Calculadora/Calculadora';\n\nfunction App() {\n  return ( \n    <ChakraProvider>\n<Calculadora/> \n    </ChakraProvider>\n    \n    \n  );\n}\n\nexport default App;\n","/home/bernardo/react/calculadora/src/reportWebVitals.js",[],[],"/home/bernardo/react/calculadora/src/componentes/Calculadora/Calculadora.js",["25","26"],[],"import { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Container,\n  Grid,\n  Heading,\n  VStack,\n  Box,\n  Text,\n} from \"@chakra-ui/react\";\n\nfunction Calculadora() {\n  const [valorDisplay, setValorDisplay] = useState(\"0\");\n  const [primeiroOperando, setPrimeiroOperando] = useState(null);\n  const [operador, setOperador] = useState(null);\n  const [aguardandoSegundoOperando, setAguardandoSegundoOperando] =\n    useState(false);\n\n  const inserirDigito = (digito) => {\n    if (aguardandoSegundoOperando) {\n      setValorDisplay(String(digito));\n      setAguardandoSegundoOperando(false);\n    } else {\n      setValorDisplay((prevValor) =>\n        prevValor === \"0\" ? String(digito) : prevValor + digito\n      );\n    }\n  };\n\n  const inserirDecimal = () => {\n    if (!valorDisplay.includes(\".\")) {\n      setValorDisplay((prevValor) => prevValor + \".\");\n    }\n  };\n\n  const limparDisplay = () => {\n    setValorDisplay(\"0\");\n    setPrimeiroOperando(null);\n    setOperador(null);\n    setAguardandoSegundoOperando(false);\n  };\n\n  const realizarOperacao = (proximoOperador) => {\n    const valorInput = parseFloat(valorDisplay);\n\n    if (primeiroOperando === null) {\n      setPrimeiroOperando(valorInput);\n    } else if (operador) {\n      const resultado = calcular(primeiroOperando, valorInput, operador);\n      setValorDisplay(String(resultado));\n      setPrimeiroOperando(resultado);\n    }\n\n    setAguardandoSegundoOperando(true);\n    setOperador(proximoOperador);\n  };\n\n  const calcular = (primeiroOperando, segundoOperando, operador) => {\n    switch (operador) {\n      case \"+\":\n        return primeiroOperando + segundoOperando;\n      case \"-\":\n        return primeiroOperando - segundoOperando;\n      case \"*\":\n        return primeiroOperando * segundoOperando;\n      case \"/\":\n        return primeiroOperando / segundoOperando;\n      default:\n        return segundoOperando;\n    }\n  };\n\n  const handleKeyDown = (event) => {\n    const { key } = event;\n    if (/[0-9]/.test(key)) {\n      inserirDigito(Number(key));\n    } else if (key === \".\") {\n      inserirDecimal();\n    } else if (key === \"+\" || key === \"-\" || key === \"*\" || key === \"/\") {\n      realizarOperacao(key);\n    } else if (key === \"Enter\") {\n      realizarOperacao(\"=\");\n    } else if (key === \"Escape\") {\n      limparDisplay();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n\n  return (\n    <Container item=\"sm\" mt={10}>\n      <VStack spacing={6}>\n        <Box\n          bg=\"blackAlpha.400\"\n          maxWidth={250}\n          width={250}\n          p={4}\n          border={\"2px solid gray\"}\n          borderRadius=\"md\"\n        >\n          <Text textAlign=\"right\" fontSize={valorDisplay.length >= 10 ? 18 : valorDisplay.length >= 15 ? 12   : 30}>\n            {valorDisplay}\n          </Text>\n\n          <Grid templateColumns=\"repeat(4, 1fr)\" gap={2}>\n            <Button onClick={() => inserirDigito(7)}>7</Button>\n            <Button onClick={() => inserirDigito(8)}>8</Button>\n            <Button onClick={() => inserirDigito(9)}>9</Button>\n            <Button onClick={() => realizarOperacao(\"/\")}>รท</Button>\n            <Button onClick={() => inserirDigito(4)}>4</Button>\n            <Button onClick={() => inserirDigito(5)}>5</Button>\n            <Button onClick={() => inserirDigito(6)}>6</Button>\n            <Button onClick={() => realizarOperacao(\"*\")}>*</Button>\n            <Button onClick={() => inserirDigito(1)}>1</Button>\n            <Button onClick={() => inserirDigito(2)}>2</Button>\n            <Button onClick={() => inserirDigito(3)}>3</Button>\n            <Button onClick={() => realizarOperacao(\"-\")}>-</Button>\n            <Button onClick={() => inserirDigito(0)}>0</Button>\n            <Button onClick={inserirDecimal}>.</Button>\n            <Button onClick={() => realizarOperacao(\"+\")}>+</Button>\n            <Button bg={\"orange.300\"} onClick={limparDisplay}>\n              C\n            </Button>\n            <Button bg={\"red.300\"}onClick={() => realizarOperacao(\"=\")}>=</Button>\n          </Grid>\n        </Box>\n      </VStack>\n    </Container>\n  );\n}\n\nexport default Calculadora;\n  ",{"ruleId":"27","severity":1,"message":"28","line":1,"column":8,"nodeType":"29","messageId":"30","endLine":1,"endColumn":12},{"ruleId":"27","severity":1,"message":"31","line":6,"column":3,"nodeType":"29","messageId":"30","endLine":6,"endColumn":10},{"ruleId":"32","severity":1,"message":"33","line":93,"column":6,"nodeType":"34","endLine":93,"endColumn":8,"suggestions":"35"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Heading' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleKeyDown'. Either include it or remove the dependency array.","ArrayExpression",["36"],{"desc":"37","fix":"38"},"Update the dependencies array to be: [handleKeyDown]",{"range":"39","text":"40"},[2480,2482],"[handleKeyDown]"]